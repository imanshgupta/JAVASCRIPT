* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
html {
  font-size: 16px;
  font-weight: 300;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  line-height: 1.5;
  color: #eee;
  background-color: #333;
}
body {
  background-color: #333;
  min-height: 100vh;
}
header {
  padding: 1rem 2rem;
}
h1 {
  color: orange;
}
h2 {
  color: orangered;
}
form {
  max-width: 600px;
}
form > p {
  padding: 1rem 2rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  box-sizing: border-box;
  /* for the underlay */
  position: relative;
  z-index: 1;
  overflow: hidden;
  /* for the label to inherit */
  color: #eee;
}
form p::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  background-color: hsla(200, 10%, 50%, 0.64);
  transform: translateX(-110%);
  transition: transform 0.2s ease-out;
}
form p:focus-within {
  /* for the label to inherit */
  color: #fff;
  text-shadow: 1px 1px 1px #000;
}
form p:focus-within::before {
  transform: translateX(0);
}
label {
  font-size: 1.2rem;
  flex-basis: 30%;
  padding: 0.25rem 1px;
  text-align: start;
  /* in cooperation with form p:focus-within */
  color: inherit;
  text-shadow: inherit;
}
input {
  font-size: 1.2rem;
  flex-basis: 100%;
  width: calc(100% - 2px);
  padding: 0.25rem 1rem;
  border-radius: 0.25rem;
}
select,
option {
  font-size: 1.2rem;
  flex-basis: 100%;
  width: calc(100% - 2px);
  padding: 0.25rem 1rem;
}
button {
  border: none;
  background-color: cornflowerblue;
  color: #fff;
  flex-basis: 100%;
  width: calc(100% - 2px);
  padding: 0.5rem 1rem;
  font-size: 1.5rem;
}
.instructions {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  color: #ccc;
}
.instructions span {
  padding-left: 2rem;
}
input:focus,
select:focus,
textarea:focus {
  /* field currently has focus */
}
input:read-only {
  /* field marked as read-only */
}
input:read-write {
  /* not disabled or read-only */
}
input:disabled {
  /* disabled attribute in html element */
}
input:required,
select:required,
option:required {
  /* input field IS marked as required */
}
input:required + .instructions::before {
  content: '* required';
  display: inline-block;
  color: red;
  font-size: 1.2rem;
}
input:optional {
  /* input field not marked as required */
}
:placeholder-shown {
  /* placeholder is showing... not user text */
}
::placeholder {
  /* style the placeholder text */
}
input:valid {
  /* passed all validation based on validityState properties */
}
input:invalid {
  /* failed some validation */
}
:in-range {
  /* value is the between the min and max values */
}
:out-of-range {
  /* value too small or too big :: using min and max attributes */
  background-color: rebeccapurple;
}
